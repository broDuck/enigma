<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- 					Enigma DB							-->

    <bean id="enigma-dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close" >
        <property name="driverClassName" value="${enigma.jdbc.driverClassName}" />
        <property name="url" value="${enigma.jdbc.url}" />
        <property name="username" value="${enigma.jdbc.username}" />
        <property name="password" value="${enigma.jdbc.password}" />

        <property name="initialSize" value="${enigma.jdbc.initialSize}"/>
        <property name="maxTotal" value="${enigma.jdbc.maxTotal}"/>
        <property name="minIdle" value="${enigma.jdbc.minIdle}"/>
        <property name="maxIdle" value="${enigma.jdbc.maxIdle}"/>
        <property name="maxWaitMillis" value="${enigma.jdbc.maxWaitMillis}"/>
        <property name="validationQuery" value="${enigma.jdbc.validationQuery}" />
        <property name="testOnBorrow" value="${enigma.jdbc.testOnBorrow}"/>
        <property name="testOnReturn" value="${enigma.jdbc.testOnReturn}" />
        <property name="testWhileIdle" value="${enigma.jdbc.testWhileIdle}" />
        <property name="removeAbandonedOnBorrow" value="${enigma.jdbc.removeAbandonedOnBorrow}" />
        <property name="removeAbandonedOnMaintenance" value="${enigma.jdbc.removeAbandonedOnMaintenance}" />
        <property name="removeAbandonedTimeout" value="${enigma.jdbc.removeAbandonedTimeout}" />
        <property name="poolPreparedStatements" value="${enigma.jdbc.poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements" value="${enigma.jdbc.maxOpenPreparedStatements}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${enigma.jdbc.timeBetweenEvictionRunsMillis}"/>
    </bean>

    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="enigma-dataSource" />-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml" />-->
        <!--<property name="mapperLocations">-->
            <!--<array>-->
                <!--<value>classpath*:/generate-sql/**/*.xml</value>-->
                <!--<value>classpath*:/sql/**/*.xml</value>-->
            <!--</array>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="enigma-sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
        <!--<constructor-arg ref="sqlSessionFactory" />-->
    <!--</bean>-->

    <bean id="enigma-transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="enigma-dataSource" />
    </bean>

    <tx:advice id="enigma-txAdvice" transaction-manager="enigma-transactionManager">
        <tx:attributes>
            <tx:method name="*" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>


    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceOperation" expression="execution(* com.broduck.enigma.service..*Service.*(..))" />
        <aop:advisor id="enigma-transactionAdvisor" pointcut-ref="serviceOperation" advice-ref="enigma-txAdvice" />
    </aop:config>
</beans>